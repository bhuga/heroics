#!/usr/bin/env ruby

require 'optparse'
require 'heroics'
require 'open-uri'

options = {headers: {}, cache_path: nil}
option_parser = OptionParser.new do |opts|
  opts.banner = <<-EOS
Usage: heroics-generate module_name schema_filepath url
       heroics-generate configuration-file-path.rb
EOS

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  opts.on('-H', '--header [HEADER]',
          'Include header with all requests') do |header|
    parts = header.split(':', 0)
    options[:headers][parts[0]] = parts[1].strip
  end

  opts.on('-c', '--cache-dir [PATH]',
          'Content cache directory (~ is automatically expanded)') do |path|
    options[:cache_path] = path.sub('~', '#{Dir.home}')
  end
end

option_parser.parse!
if ARGV.length == 1
  config_file = ARGV[0]
  if File.readable?(config_file)
    require config_file

    puts Heroics.generate_client_with_configuration
  else
    raise "Unable to read configuration file: #{configuration}"
  end
elsif ARGV.length == 3
  module_name, schema_filepath, base_url = ARGV

  Heroics.default_configuration do |config|
    config.module_name = module_name
    config.schema = schema_filepath

    config.base_url = base_url

    if options[:cache_path]
      config.cache = "Moneta.new(:File, dir: \"#{options[:cache_path]}\")"
    end

    if options[:headers]
      config.headers = options[:headers]
    end
  end

  puts Heroics.generate_client_with_configuration
else
  puts option_parser
end
